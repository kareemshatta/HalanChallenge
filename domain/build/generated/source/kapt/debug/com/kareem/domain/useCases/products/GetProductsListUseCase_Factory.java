// Generated by Dagger (https://dagger.dev).
package com.kareem.domain.useCases.products;

import com.kareem.domain.repositories.products.ProductsRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class GetProductsListUseCase_Factory implements Factory<GetProductsListUseCase> {
  private final Provider<ProductsRepository> repositoryProvider;

  public GetProductsListUseCase_Factory(Provider<ProductsRepository> repositoryProvider) {
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public GetProductsListUseCase get() {
    return newInstance(repositoryProvider.get());
  }

  public static GetProductsListUseCase_Factory create(
      Provider<ProductsRepository> repositoryProvider) {
    return new GetProductsListUseCase_Factory(repositoryProvider);
  }

  public static GetProductsListUseCase newInstance(ProductsRepository repository) {
    return new GetProductsListUseCase(repository);
  }
}
